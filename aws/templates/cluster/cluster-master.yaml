AWSTemplateFormatVersion: 2010-09-09
Description: Deploy a Check Point Cluster in a new VPC (20211212)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Network Configuration
        Parameters:
          - AvailabilityZone
          - VPCCIDR
          - PublicSubnetCIDR
          - PrivateSubnetCIDR
      - Label:
          default: EC2 Instance Configuration
        Parameters:
          - GatewayName
          - GatewayInstanceType
          - KeyName
          - AllocatePublicAddress
          - VolumeSize
          - VolumeEncryption
          - EnableInstanceConnect
          - GatewayPredefinedRole
      - Label:
          default: Check Point Settings
        Parameters:
          - GatewayVersion
          - Shell
          - GatewayPasswordHash
          - GatewaySICKey
      - Label:
          default: Advanced Settings
        Parameters:
          - ResourcesTagName
          - GatewayHostname
          - AllowUploadDownload
          - GatewayBootstrapScript
          - NTPPrimary
          - NTPSecondary
    ParameterLabels:
      VPCCIDR:
        default: VPC CIDR
      AvailabilityZone:
        default: Availability zone
      PublicSubnetCIDR:
        default: Public subnet CIDR
      PrivateSubnetCIDR:
        default: Private subnet CIDR
      GatewayName:
        default: Gateway Name
      GatewayInstanceType:
        default: Security Gateways instance type
      KeyName:
        default: Key name
      AllocatePublicAddress:
        default: Allocate Elastic IPs
      VolumeSize:
        default: Root volume size (GB)
      VolumeEncryption:
        default: Volume encryption KMS key identifier
      EnableInstanceConnect:
        default: Enable AWS Instance Connect
      GatewayPredefinedRole:
        default: Existing IAM role name
      GatewayVersion:
        default: Version & license
      Shell:
        default: Admin shell
      GatewayPasswordHash:
        default: Password hash
      GatewaySICKey:
        default: SIC key
      ResourcesTagName:
        default: Resources prefix tag
      GatewayHostname:
        default: Gateway Hostname
      AllowUploadDownload:
        default: Allow upload & download
      GatewayBootstrapScript:
        default: Bootstrap Script
      NTPPrimary:
        default: Primary NTP server
      NTPSecondary:
        default: Secondary NTP server
Parameters:
  AvailabilityZone:
    Description: The availability zone in which to deploy the cluster
    Type: AWS::EC2::AvailabilityZone::Name
    MinLength: 1
  VPCCIDR:
    Description: The CIDR block for your VPC
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PublicSubnetCIDR:
    Description: The external subnet of the cluster. The cluster's public IPs will be generated from this subnet.
    Type: String
    Default: 10.0.10.0/24
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  PrivateSubnetCIDR:
    Description: The internal subnet of the cluster. The cluster's private IPs will be generated from this subnet.
    Type: String
    Default: 10.0.11.0/24
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  GatewayName:
    Description: The name tag of the Security Gateway instances (optional)
    Type: String
    Default: Check-Point-Cluster
  GatewayInstanceType:
    Description: The instance type of the Secutiry Gateway
    Type: String
    Default: c5.xlarge
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: 1
  AllocatePublicAddress:
    Description: Allocate an Elastic IP for each cluster member, in addition to the shared cluster Elastic IP.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  VolumeSize:
    Type: Number
    Default: 100
    MinValue: 100
  VolumeEncryption:
    Description: KMS or CMK key Identifier - Use key ID, alias or ARN. Key alias should be prefixed with 'alias/' (e.g. for KMS default alias 'aws/ebs' - insert 'alias/aws/ebs')
    Type: String
    Default: alias/aws/ebs
  EnableInstanceConnect:
    Description: Enable SSH connection over AWS web console
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
  GatewayPredefinedRole:
    Description: A predefined IAM role to attach to the cluster profile (optional)
    Type: String
    Default: ''
  GatewayVersion:
    Type: String
    Default: R80.40-PAYG-NGTP
    AllowedValues:
      - R80.40-BYOL
      - R80.40-PAYG-NGTP
      - R80.40-PAYG-NGTX
      - R81-BYOL
      - R81-PAYG-NGTP
      - R81-PAYG-NGTX
      - R81.10-BYOL
      - R81.10-PAYG-NGTP
      - R81.10-PAYG-NGTX
  Shell:
    Description: Change the admin shell to enable advanced command line configuration
    Type: String
    Default: /etc/cli.sh
    AllowedValues:
      - /etc/cli.sh
      - /bin/bash
      - /bin/csh
      - /bin/tcsh
  GatewayPasswordHash:
    Description: Admin user's password hash (use command "openssl passwd -6 PASSWORD"
      to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: '^[\$\./a-zA-Z0-9]*$'
    NoEcho: true
  GatewaySICKey:
    Description: The Secure Internal Communication key creates trusted connections
      between Check Point components. Choose a random string consisting of at least
      8 alphanumeric characters
    Type: String
    AllowedPattern: '^[a-zA-Z0-9]{8,}$'
    ConstraintDescription: At least 8 alpha numeric characters
    NoEcho: true
  ResourcesTagName:
    Description: Name tag prefix of the resources (optional)
    Type: String
    Default: ''
  GatewayHostname:
    Description: The host name will be appended with member-a/b accordingly (optional)
    Type: String
    Default: ''
    AllowedPattern: '^([A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z]))?$'
    ConstraintDescription: A valid hostname label or an empty string
  AllowUploadDownload:
    Description: Automatically download Blade Contracts and other important data.
      Improve product experience by sending data to Check Point
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  GatewayBootstrapScript:
    Description: An optional script with semicolon (;) separated commands to run on the initial boot (optional)
    Type: String
    Default: ''
    NoEcho: true
  NTPPrimary:
    Description: (optional)
    Type: String
    Default: 169.254.169.123
    AllowedPattern: '^[\.a-zA-Z0-9\-]*$'
  NTPSecondary:
    Description: (optional)
    Type: String
    Default: 0.pool.ntp.org
    AllowedPattern: '^[\.a-zA-Z0-9\-]*$'
Conditions:
  AllocateAddress: !Equals [!Ref AllocatePublicAddress, true]
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cgi-cfts.s3.amazonaws.com/utils/vpc.yaml
      Parameters:
        AvailabilityZones: !Ref AvailabilityZone
        NumberOfAZs: 1
        VPCCIDR: !Ref VPCCIDR
        PublicSubnet1CIDR: !Ref PublicSubnetCIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnetCIDR
  InternalRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPCStack
    Properties:
      VpcId: !GetAtt VPCStack.Outputs.VPCID
      Tags:
        - Key: Name
          Value: Private Subnets Route Table
  ClusterStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: https://cgi-cfts.s3.amazonaws.com/cluster/cluster.yaml
      Parameters:
        VPC: !GetAtt VPCStack.Outputs.VPCID
        PublicSubnet: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PrivateSubnet: !GetAtt VPCStack.Outputs.PrivateSubnet1ID
        InternalRouteTable: !Ref InternalRouteTable
        GatewayName: !Ref GatewayName
        GatewayInstanceType: !Ref GatewayInstanceType
        KeyName: !Ref KeyName
        AllocatePublicAddress: !Ref AllocatePublicAddress
        VolumeSize: !Ref VolumeSize
        VolumeEncryption: !Ref VolumeEncryption
        EnableInstanceConnect: !Ref EnableInstanceConnect
        GatewayPredefinedRole: !Ref GatewayPredefinedRole
        GatewayVersion: !Ref GatewayVersion
        Shell: !Ref Shell
        GatewayPasswordHash: !Ref GatewayPasswordHash
        GatewaySICKey: !Ref GatewaySICKey
        ResourcesTagName: !Ref ResourcesTagName
        GatewayHostname: !Ref GatewayHostname
        AllowUploadDownload: !Ref AllowUploadDownload
        GatewayBootstrapScript: !Ref GatewayBootstrapScript
        NTPPrimary: !Ref NTPPrimary
        NTPSecondary: !Ref NTPSecondary
Outputs:
  ClusterPublicAddress:
    Description: The public address of the cluster
    Value: !GetAtt ClusterStack.Outputs.ClusterPublicAddress
  MemberAPublicAddress:
    Condition: AllocateAddress
    Description: The public address of member A
    Value: !GetAtt ClusterStack.Outputs.MemberAPublicAddress
  MemberASSH:
    Condition: AllocateAddress
    Description: SSH command to member A
    Value: !GetAtt ClusterStack.Outputs.MemberASSH
  MemberAURL:
    Condition: AllocateAddress
    Description: URL to the member A portal
    Value: !GetAtt ClusterStack.Outputs.MemberAURL
  MemberBPublicAddress:
    Condition: AllocateAddress
    Description: The public address of member B
    Value: !GetAtt ClusterStack.Outputs.MemberBPublicAddress
  MemberBSSH:
    Condition: AllocateAddress
    Description: SSH command to member B
    Value: !GetAtt ClusterStack.Outputs.MemberBSSH
  MemberBURL:
    Condition: AllocateAddress
    Description: URL to the member B portal
    Value: !GetAtt ClusterStack.Outputs.MemberBURL
